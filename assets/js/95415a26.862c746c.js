"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[2532],{7311:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>r,contentTitle:()=>o,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var n=i(5893),a=i(1151);const s={},o="File Upload",l={id:"vulnerabilities/web/file-upload/README",title:"File Upload",description:"First step in many attacks is to get some code to the system to be attacked. Then the attacker only needs to a find a way to get the code executed. Using a file upload helps to accomplish the first step.",source:"@site/docs/vulnerabilities/web/file-upload/README.md",sourceDirName:"vulnerabilities/web/file-upload",slug:"/vulnerabilities/web/file-upload/",permalink:"/cybersecurity-handbook/vulnerabilities/web/file-upload/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"File Inclusion",permalink:"/cybersecurity-handbook/vulnerabilities/web/file-inclusion/"},next:{title:"Host Header Attack",permalink:"/cybersecurity-handbook/vulnerabilities/web/host-header/"}},r={},d=[{value:"Filenames",id:"filenames",level:2},{value:"MIME Types",id:"mime-types",level:2},{value:"Sniffing",id:"sniffing",level:2},{value:"PNG",id:"png",level:3},{value:"Mitigations",id:"mitigations",level:2},{value:"Separate Domains",id:"separate-domains",level:3},{value:"Generated Filenames",id:"generated-filenames",level:3},{value:"Type and Disposition",id:"type-and-disposition",level:2},{value:"Image Stripping",id:"image-stripping",level:2}];function c(e){const t={code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",p:"p",strong:"strong",...(0,a.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"file-upload",children:"File Upload"}),"\n",(0,n.jsx)(t.p,{children:"First step in many attacks is to get some code to the system to be attacked. Then the attacker only needs to a find a way to get the code executed. Using a file upload helps to accomplish the first step."}),"\n",(0,n.jsx)(t.p,{children:"The consequences of unrestricted file upload can vary, including complete system takeover, overloaded file system or database, forwarding attacks to backend systems, client-side attacks, or simple defacemenet."}),"\n",(0,n.jsx)(t.h2,{id:"filenames",children:"Filenames"}),"\n",(0,n.jsx)(t.p,{children:"If you see an uploaded file retain the original name, or a derivative thereof, chances are good that you can manipulate it."}),"\n",(0,n.jsxs)(t.p,{children:["For example, ",(0,n.jsx)(t.em,{children:"directory traversal"})," works well. What if you upload a file called ",(0,n.jsx)(t.code,{children:'"../../test.php"'}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"mime-types",children:"MIME Types"}),"\n",(0,n.jsx)(t.p,{children:"Often, the MIME type sent by the browser on file uploads is stored in a database along with the uploaded filename and associated metadata."}),"\n",(0,n.jsx)(t.p,{children:"If this is sent down with the file when it's accessed, this can allow things like XSS. For instance, you could upload a HTML file disguised with an image filename, and send text/html as the MIME type. Upon access, the browser will parse it like HTML."}),"\n",(0,n.jsx)(t.h2,{id:"sniffing",children:"Sniffing"}),"\n",(0,n.jsx)(t.p,{children:"When uploading images in particular, many sites will attempt to validate that the file is an actual image, then allow it to pass through with no modification."}),"\n",(0,n.jsx)(t.p,{children:"Even if it is a valid image, it can still contain malicious content."}),"\n",(0,n.jsx)(t.h3,{id:"png",children:"PNG"}),"\n",(0,n.jsx)(t.p,{children:'PNG files, for instance, can contain arbitrary "chunks" that are completely valid and ignored by the file loader. This allows you to embed any HTML into a PNG while maintaining a completely proper file.'}),"\n",(0,n.jsx)(t.p,{children:"Depending on filename and MIME type sent by the server, the browser could decide to parse it purely as HTML, rather than an image, leading to XSS."}),"\n",(0,n.jsx)(t.h2,{id:"mitigations",children:"Mitigations"}),"\n",(0,n.jsx)(t.h3,{id:"separate-domains",children:"Separate Domains"}),"\n",(0,n.jsx)(t.p,{children:"File uploded by users should be hosted on separate domain. If you don't do that, Same-Origin policy comes into play, and it's possible for Javascript running in the context of the domain to manipulate the site, get cookies, etc..."}),"\n",(0,n.jsx)(t.p,{children:"This does not solve any of the issues directly, but it does give you insurance in case other mitigations fail."}),"\n",(0,n.jsx)(t.h3,{id:"generated-filenames",children:"Generated Filenames"}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Filenames should never come from a user directly"}),", rather it should be generated randomly (or via a hash, for example, file contents + timestamp) with an extension based on MIME type or detected file type."]}),"\n",(0,n.jsxs)(t.p,{children:["Note that ",(0,n.jsx)(t.strong,{children:"extensions should be whitelisted"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"type-and-disposition",children:"Type and Disposition"}),"\n",(0,n.jsx)(t.p,{children:"If uploaded files are not being served directly from the filesystem, then the issue becomes: what MIME type and content disposition do we use?"}),"\n",(0,n.jsxs)(t.p,{children:["General rule is that ",(0,n.jsx)(t.strong,{children:"MIME types should be whitelisted"}),'. If you want to allow other types, content disposition should be set to "',(0,n.jsx)(t.em,{children:"attachment"}),'". That will force the browser to download the file rather than display it.']}),"\n",(0,n.jsx)(t.h2,{id:"image-stripping",children:"Image Stripping"}),"\n",(0,n.jsx)(t.p,{children:"If you're handling only images, then removing EXIF data from JPEGs, ancillary chunks from PNG files, and all other extraneous data is always a good idea, because those are great hiding spots for HTML."})]})}function h(e={}){const{wrapper:t}={...(0,a.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},1151:(e,t,i)=>{i.d(t,{Z:()=>l,a:()=>o});var n=i(7294);const a={},s=n.createContext(a);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);