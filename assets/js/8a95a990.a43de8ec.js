"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1313],{644:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>i,default:()=>h,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var o=r(5893),t=r(1151);const s={},i="Protocols",c={id:"cert_notes/ccna/osi/transport/protocols/README",title:"Protocols",description:"* TCP",source:"@site/docs/cert_notes/ccna/osi/4-transport/protocols/README.md",sourceDirName:"cert_notes/ccna/osi/4-transport/protocols",slug:"/cert_notes/ccna/osi/transport/protocols/",permalink:"/cybersecurity-handbook/cert_notes/ccna/osi/transport/protocols/",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"4. Transport Layer",permalink:"/cybersecurity-handbook/cert_notes/ccna/osi/transport/"},next:{title:"LPIC-1",permalink:"/cybersecurity-handbook/cert_notes/lpic-1/"}},a={},l=[{value:"TCP: Transmission Control Protocol.",id:"tcp-transmission-control-protocol",level:2},{value:"Three Way Handshake",id:"three-way-handshake",level:3},{value:"UDP: User Datagram Protocol",id:"udp-user-datagram-protocol",level:2},{value:"Rapid STP: Rapid Spanning Tree Protocol",id:"rapid-stp-rapid-spanning-tree-protocol",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"protocols",children:"Protocols"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"TCP"}),"\n",(0,o.jsx)(n.li,{children:"UDP"}),"\n",(0,o.jsx)(n.li,{children:"Rapid STP"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"tcp-transmission-control-protocol",children:"TCP: Transmission Control Protocol."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Reliable Transport."}),"\n",(0,o.jsx)(n.li,{children:"Segments are acknowledged."}),"\n"]}),"\n",(0,o.jsxs)(n.p,{children:["Before Segments are sent between devices, the devices go through or create a virtual connection with each other by going through what is called a ",(0,o.jsx)(n.strong,{children:"Three Way Handshake"}),". By default, for everey segment that is sent, I expect an acknowledgment in return from the other end, and if I don't receive it, I simply resend this segment. You can customize in such a way that for example we expect an acknowledgmenet for every 10 segments."]}),"\n",(0,o.jsx)(n.h3,{id:"three-way-handshake",children:"Three Way Handshake"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"H1 -> SYN -> H2\nH1 <- SYN / ACK <- H2\nH1 -> ACK -> H2\n"})}),"\n",(0,o.jsx)(n.h2,{id:"udp-user-datagram-protocol",children:"UDP: User Datagram Protocol"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Connectionless Unreliable Transport."}),"\n",(0,o.jsx)(n.li,{children:"Segments are not acknowledged."}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"rapid-stp-rapid-spanning-tree-protocol",children:"Rapid STP: Rapid Spanning Tree Protocol"}),"\n",(0,o.jsxs)(n.p,{children:["Uses a quick ",(0,o.jsx)(n.strong,{children:"Proposal Agreement Process"})," on point-to-point links to rapidly put the port into a forwarding state without causing disruption in services or creating a loop."]}),"\n",(0,o.jsx)(n.p,{children:"STP:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Blocking"}),"\n",(0,o.jsx)(n.li,{children:"Listening"}),"\n",(0,o.jsx)(n.li,{children:"Learning"}),"\n",(0,o.jsx)(n.li,{children:"Forwarding"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"RSTP:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsx)(n.li,{children:"Discarding"}),"\n",(0,o.jsx)(n.li,{children:"Discarding"}),"\n",(0,o.jsx)(n.li,{children:"Learning"}),"\n",(0,o.jsx)(n.li,{children:"Forwarding"}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>c,a:()=>i});var o=r(7294);const t={},s=o.createContext(t);function i(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);